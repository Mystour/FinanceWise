plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.compose'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id "com.mikepenz.aboutlibraries.plugin" version "11.1.3"
    alias(libs.plugins.google.android.libraries.mapsplatform.secrets.gradle.plugin)
}

apply plugin: 'com.mikepenz.aboutlibraries.plugin'

android {
    namespace 'com.starry.greenstash'
    compileSdk 35

    defaultConfig {
        applicationId "com.starry.greenstash.publish"
        minSdk 24
        targetSdk 35
        versionCode 391
        versionName "3.9.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        ksp {
            arg('room.schemaLocation', "$projectDir/schemas")
        }

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Rename the output apk file automatically.
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def name = "FinanceWise-v${variant.versionName}.apk"
                    output.outputFileName = name
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs = []
    }
    buildFeatures {
        compose true
        buildConfig = true

    }
    composeCompiler {
        enableStrongSkippingMode = true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    androidResources {
        generateLocaleConfig true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    buildFeatures {
        viewBinding true
    }
}

aboutLibraries {
    // Remove the "generated" timestamp to allow for reproducible builds
    excludeFields = ["generated"]
}


dependencies {

    implementation files('libs\\Msc.jar')
    implementation libs.places
    def composeBom = libs.androidx.compose.bom.v20240902
    implementation composeBom
    androidTestImplementation composeBom

    // Android core components.
    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    //noinspection GradleDependency
    implementation(libs.androidx.activity.compose.v193)
    implementation(libs.androidx.lifecycle.livedata.ktx)
    implementation(libs.androidx.lifecycle.lifecycle.viewmodel.compose9)
    implementation(libs.androidx.navigation.compose)
    // Jetpack compose.
    implementation(libs.androidx.compose.ui.ui5)
    implementation(libs.androidx.compose.ui.ui.tooling.preview5)
    implementation(libs.androidx.material)
    implementation(libs.androidx.animation)
    implementation(libs.androidx.runtime.livedata)
    implementation(libs.material3)
    // Material theme for main activity.
    implementation(libs.material)
    // Android 12+ splash API.
    implementation(libs.androidx.core.splashscreen)
    // Material icons.
    implementation(libs.androidx.material.icons.extended)
    // Room database
    implementation(libs.androidx.room.ktx)
    ksp "androidx.room:room-compiler:$room_version"
    androidTestImplementation(libs.androidx.room.testing)
    // Dagger - Hilt.
    implementation(libs.hilt.android)
    implementation(libs.androidx.hilt.navigation.compose)
    ksp "com.google.dagger:hilt-android-compiler:$hilt_version"
    ksp(libs.androidx.hilt.compiler)
    // DataStore Preferences.
    implementation(libs.androidx.datastore.preferences)
    // Kotlin Serialization.
    implementation(libs.kotlinx.serialization.json)
    // Coil Image loading library.
    implementation(libs.coil.compose)
    // Material 3 calender / Date picker.
    implementation(libs.core)
    implementation(libs.calendar)
    implementation(libs.date.time)
    // Tap-target compose.
    implementation(libs.taptargetcompose.core)
    // Lottie animations.
    implementation(libs.lottie.compose)
    // Bio-metric authentication.
    implementation(libs.androidx.biometric)
    // Open Source Libraries Screen.
    implementation(libs.aboutlibraries.core)
    implementation(libs.aboutlibraries.compose)
    // Crash Handler.
    implementation(libs.customactivityoncrash)

    implementation(libs.generativeai)
    implementation(libs.markwon.core)
    implementation(libs.gson)

    implementation(libs.timber)

    implementation(libs.chart)
    implementation(libs.jsonViewer)

//    implementation(libs.mp3.encoder)

    // Oreo back-ports for API 24 (N)
    coreLibraryDesugaring(libs.desugar.jdk.libs)
    // Testing components.
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
    androidTestImplementation(libs.androidx.compose.ui.ui.test.junit4)
    debugImplementation(libs.ui.tooling)
    debugImplementation(libs.ui.test.manifest)
}